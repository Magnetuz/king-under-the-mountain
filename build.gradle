if(JavaVersion.current() != JavaVersion.VERSION_11){
    throw new GradleException("This build must be run with java 11, is currently " + JavaVersion.current())
}

buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    }
    dependencies {
        classpath group: 'org.mini2Dx', name: 'butler', version: '1.1.3'
    }
}

allprojects {
    apply plugin: "eclipse"
    apply plugin: "idea"

    version = 'Alpha 4.2.1'
    ext {
        appName = 'undermount'
        gdxVersion = '1.9.10'
        roboVMVersion = '1.0.0-SNAPSHOT'
        ashleyVersion = '1.3.1'
        aiVersion = '1.5.0'
    }

    repositories {
        mavenCentral()
        mavenLocal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    }

}

project(":desktop") {
    apply plugin: "java"
    sourceCompatibility = 11


    dependencies {
        compile project(":core")
//        compile "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion" // Now part of core module (code smell)
        compile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        compile "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-desktop"
        compile group: 'com.amazonaws', name: 'aws-java-sdk-translate', version: '1.11.708'


        testCompile "junit:junit:4.10"
        testCompile "org.mockito:mockito-core:3.5.13"
        testCompile "org.easytesting:fest-assert:1.4"
    }

    clean.doFirst {
        file('../release_tools/win64_release').deleteDir()
        file('../release_tools/linux64_release').deleteDir()
        file('../release_tools/macosx_release').deleteDir()
    }


    task('packrWin', type: JavaExec, dependsOn: 'dist') {
        workingDir '../release_tools'
        main '-jar'
        args=["packr.jar", "win-config.json"]
    }
    task('packrMac', type: JavaExec, dependsOn: 'dist') {
        workingDir '../release_tools'
        main '-jar'
        args=["packr.jar", "mac-config.json"]
    }
    task('packrLinux', type: JavaExec, dependsOn: 'dist') {
        workingDir '../release_tools'
        main '-jar'
        args=["packr.jar", "linux-config.json"]
    }


    task('iconWin', type: Exec, dependsOn: 'packrWin') {
        workingDir '../release_tools'
        commandLine 'cmd', '/c', 'rcedit-x64.exe', '"win64_release/King under the Mountain.exe"',  '--set-icon', '"icon/favicon.ico"'
    }

    task('zipWin', type: Zip, dependsOn: 'iconWin') {
        archiveName = "King under the Mountain $version win64.zip"
        destinationDir = file("../release_tools")
        from "../release_tools/win64_release"
    }
    task('zipMac', type: Zip, dependsOn: 'packrMac') {
        archiveName = "King under the Mountain $version macosx.zip"
        destinationDir = file("../release_tools")
        from "../release_tools/macosx_release"
    }
    task('zipLinux', type: Zip, dependsOn: 'packrLinux') {
        archiveName = "King under the Mountain $version linux64.zip"
        destinationDir = file("../release_tools")
        from "../release_tools/linux64_release"
    }

    task('butlerWin', type: Exec, dependsOn: 'iconWin') {
        workingDir '../release_tools'
        commandLine 'butler', 'push', 'win64_release', 'rocketjumptechnology/king-under-the-mountain:win', '--userversion', "$version"
    }
    task('butlerMac', type: Exec, dependsOn: 'packrMac') {
        workingDir '../release_tools'
        commandLine 'butler', 'push', 'macosx_release', 'rocketjumptechnology/king-under-the-mountain:osx', '--userversion', "$version"
    }
    task('butlerLinux', type: Exec, dependsOn: 'packrLinux') {
        workingDir '../release_tools'
        commandLine 'butler', 'push', 'linux64_release', 'rocketjumptechnology/king-under-the-mountain:linux', '--userversion', "$version"
    }

    task('zipAll') {
        dependsOn 'zipLinux'
        dependsOn 'zipMac'
        dependsOn 'zipWin'
    }

    task('release') {
        dependsOn 'butlerLinux'
        dependsOn 'butlerMac'
        dependsOn 'butlerWin'
    }
}

project(":core") {
    apply plugin: "java"
    sourceCompatibility = 11


    dependencies {
        compile "com.badlogicgames.gdx:gdx:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-ai:$aiVersion"
        compile "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion" // This is only here to multi-thread audio
        compile "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
        compile ("com.badlogicgames.gdx:gdx-tools:$gdxVersion") {
            exclude group: 'com.badlogicgames.gdx', module: 'gdx-backend-lwjgl'
        }
        compile 'com.google.inject:guice:4.2.3:no_aop'
        compile "com.kotcrab.vis:vis-ui:1.4.0"

        compile "commons-io:commons-io:2.4"
        compile "org.apache.commons:commons-csv:1.3"
        compile "org.apache.commons:commons-lang3:3.4"
        compile "com.alibaba:fastjson:1.2.7"
        compile "com.fasterxml.jackson.core:jackson-databind:2.6.4"
        compile 'org.reflections:reflections:0.9.11'
        compile "org.tinylog:tinylog:1.3.4"
        compile 'com.squareup.okhttp3:okhttp:3.10.0'

        compile 'com.brsanthu:google-analytics-java:2.0.0' // comes with slf4j which is no-op below
        compile group: 'org.slf4j', name: 'slf4j-nop', version: '1.7.25'
        compile 'net.openhft:zero-allocation-hashing:0.9'
        compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'

        compile "technology.rocketjump:undermount-mapgen-core:1.5-SNAPSHOT"

        testCompile "junit:junit:4.10"
        testCompile "org.easytesting:fest-assert:1.4"
        testCompile "org.mockito:mockito-core:3.5.13"
        testCompile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        testCompile "com.badlogicgames.gdx:gdx-backend-headless:$gdxVersion"
    }

    task createProperties {
        def version = project.version.toString()
        def file = new File("$projectDir/src/main/resources/version.txt")
        file.write(version)
    }

    classes.dependsOn createProperties
}

tasks.eclipse.doLast {
    delete ".project"
}